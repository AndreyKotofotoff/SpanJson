<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
    var types = new[]
    {
        typeof(sbyte),
        typeof(Int16),
        typeof(Int32),
        typeof(Int64),
        typeof(byte), 
        typeof(UInt16),
        typeof(UInt32),
        typeof(UInt64),
        typeof(Single),
        typeof(Double),
        typeof(bool), 
		typeof(char), 
    };
#>
using System;

<# foreach(var t in types) {  #>
namespace SpanJson.Formatters
{
    public sealed class <#= t.Name #>Formatter : IJsonFormatter<<#= t.Name #>>
    {
        public static readonly <#= t.Name #>Formatter Default = new <#= t.Name #>Formatter();

        public void Serialize(ref JsonWriter writer, <#= t.Name #> value, IJsonFormatterResolver formatterResolver)
        {
            writer.Write<#= t.Name #>(value);
        }

        public <#= t.Name #> DeSerialize(ref JsonReader reader, IJsonFormatterResolver formatterResolver)
        {
            return reader.Read<#= t.Name #>();
        }
	}
}
<# } #>